from telegram import Update, ReplyKeyboardRemove, InlineKeyboardButton, InlineKeyboardMarkup, Bot
from telegram.ext import (
    CommandHandler, MessageHandler, filters, ContextTypes, ConversationHandler
)
from bot.db import SessionLocal
from bot.models import Complaint
from bot.pdf_generator import generate_pdf
from bot.config import ADMINS, BOT_TOKEN, NOTIFY_CHAT_ID
from bot.handlers.admin_auth import auth_panel  # ‚Üê –¥–æ–±–∞–≤–ª–µ–Ω–æ

FIO, TEL, COMMENT = range(3)

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /report.")

# /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ö–æ–º–∞–Ω–¥—ã:\n/report - –ø–æ–¥–∞—Ç—å –∂–∞–ª–æ–±—É\n/FIO - –§–ò–û\n/tel - –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞\n/comment - –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n/accept - –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    )

# /report
async def report(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:")
    return FIO

# –§–ò–û
async def fio(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["fio"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    return TEL

# –¢–µ–ª–µ—Ñ–æ–Ω
async def tel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["tel"] = update.message.text
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∂–∞–ª–æ–±—ã:")
    return COMMENT

# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
async def comment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["comment"] = update.message.text
    await update.message.reply_text("–î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã –≤–≤–µ–¥–∏—Ç–µ /accept")
    return ConversationHandler.END

# /accept
async def accept(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    fio = context.user_data.get("fio", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    tel = context.user_data.get("tel", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    comment = context.user_data.get("comment", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")

    session = SessionLocal()
    complaint = Complaint(
        user_id=user_id,
        full_name=fio,
        phone=tel,
        comment=comment
    )
    session.add(complaint)
    session.commit()
    session.close()

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
    #pdf_file = generate_pdf(fio, tel, comment)
    #pdf_url = f"https://mdmgasn.uz/{pdf_file}"
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram-–≥—Ä—É–ø–ø—É
    #bot = Bot(BOT_TOKEN)
    #await bot.send_message(
    #    chat_id=NOTIFY_CHAT_ID,
    #    text=(
    #        f"<b>üì¨ –ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞!</b>\n\n"
    #        f"<b>–§–ò–û:</b> {fio}\n"
    #        f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {tel}\n"
    #        f"<b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}\n"
    #        f"<a href='{pdf_url}'>üìé –û—Ç–∫—Ä—ã—Ç—å PDF</a>"
    #    ),
    #    parse_mode="HTML"
    #)
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PDF
    pdf_file = generate_pdf(fio, tel, comment)

    # –û—á–∏—Å—Ç–∏–º –ø—É—Ç—å –æ—Ç "./"
    pdf_file = pdf_file.lstrip("./")

    # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—É—é —Å—Å—ã–ª–∫—É
    pdf_url = f"https://mdmgasn.uz/{pdf_file}"

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram-–≥—Ä—É–ø–ø—É
    bot = Bot(BOT_TOKEN)
    await bot.send_message(
        chat_id=NOTIFY_CHAT_ID,
        text=(
            f"üì¨ *–ù–æ–≤–∞—è –∂–∞–ª–æ–±–∞!*\n\n"
            f"*–§–ò–û:* {fio}\n"
            f"*–¢–µ–ª–µ—Ñ–æ–Ω:* {tel}\n"
            f"*–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* {comment}\n"
            f"[üìé –û—Ç–∫—Ä—ã—Ç—å PDF]({pdf_url})"
        ),
        parse_mode="Markdown"
)



    await update.message.reply_text(f"PDF —Å –∂–∞–ª–æ–±–æ–π —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {pdf_file}")
    await update.message.reply_text("–ñ–∞–ª–æ–±–∞ –ø—Ä–∏–Ω—è—Ç–∞. –°–ø–∞—Å–∏–±–æ!")

# –û—Ç–º–µ–Ω–∞
async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ñ–∞–ª–æ–±–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.", reply_markup=ReplyKeyboardRemove())
    return ConversationHandler.END

# –ù–∞–π—Ç–∏ Telegram ID
# async def get_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
#     await update.message.reply_text(f"üÜî –í–∞—à Telegram ID: {update.effective_user.id}")

# /id ‚Äî –≤—ã–¥–∞—Ç—å ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —á–∞—Ç–∞
async def get_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    await update.message.reply_text(
        f"üë§ –í–∞—à Telegram ID: `{user_id}`\nüí¨ Chat ID: `{chat_id}`",
        parse_mode="Markdown"
    )


def setup_handlers(app):
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("report", report)],
        states={
            FIO: [MessageHandler(filters.TEXT & ~filters.COMMAND, fio)],
            TEL: [MessageHandler(filters.TEXT & ~filters.COMMAND, tel)],
            COMMENT: [MessageHandler(filters.TEXT & ~filters.COMMAND, comment)],
        },
        fallbacks=[CommandHandler("cancel", cancel)]
    )

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("accept", accept))
    app.add_handler(CommandHandler("id", get_id))
    app.add_handler(CommandHandler("adminpanel", auth_panel))  # ‚Üê –¥–æ–±–∞–≤–ª–µ–Ω–æ
    app.add_handler(conv_handler)

